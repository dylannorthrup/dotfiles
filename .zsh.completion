autoload -Uz bracketed-paste-magic
zle -N bracketed-paste bracketed-paste-magic

set functionzeroarg   # $0 is set to the name of file containing function if function was sourced (Not the calling script)
set alwaystoend       # Completion always matches to the end of the match
set nocompleteinword  # Cursor is set to the end of the word if completion is started

local conf_files=("$HOME"/.zsh/completions.d/*.{sh,zsh}(N))
local f=''
for f in ${(o)conf_files}; do
  # ignore files that begin with a tilde
  case ${f:t} in '~'*) continue;; esac
  source "$f"
done

autoload -Uz compinit && compinit
autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic

# Put in a test here for if the file is locked and loop until a) it unlocks or
# b) we timeout after 20 seconds.
if [[ -f "${KC_COMPLETION_FILE}" ]]; then
  2>/dev/null zsystem flock -f lockvar -t 20 ${KC_COMPLETION_FILE} && \
    source ${KC_COMPLETION_FILE} && \
    zsystem flock -u $lockvar
  export KC_EXPANDED="True"
else
  echo "Could not source in the kubectl completion file '${KC_COMPLETION_FILE}'"
  echo "You'll likely want to run 'generate_kc_completion_if_needed' and restart your shell"
  echo "If that does not work, you'll want to figure out why and correct the issue."
  export KC_EXPANDED="False"
fi

alias kc='kubectl'
kcshell() {
  args=$(echo "$@" | sed -e 's/describe pod //')
  kubectl exec --stdin --tty ${=args} -- /bin/bash
}
complete -F _kubectl kc
complete -F _kubectl kcshell
complete -F _kubectl show-cluster-pods
complete -F _kubectl show-cluster-nodes
